{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "versionLabel": "Next",
          "versionPath": "/docs",
          "tagsPath": "/docs/tags",
          "versionEditUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs",
          "versionEditUrlLocalized": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/i18n/en/docusaurus-plugin-content-docs/current",
          "versionBanner": null,
          "versionBadge": false,
          "versionClassName": "docs-version-current",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "/Users/jjzcru/Workspace/Djinn/djinn/sidebars.js",
          "contentPath": "/Users/jjzcru/Workspace/Djinn/djinn/docs",
          "contentPathLocalized": "/Users/jjzcru/Workspace/Djinn/djinn/i18n/en/docusaurus-plugin-content-docs/current",
          "docs": [
            {
              "unversionedId": "architecture/djinn-board/architecture/agent",
              "id": "architecture/djinn-board/architecture/agent",
              "title": "Agent",
              "description": "This is a module that will handled the communication with the cloud, it talks with the cloud via gRPC, which uses proto buffers underneath.",
              "source": "@site/docs/architecture/djinn-board/architecture/agent.md",
              "sourceDirName": "architecture/djinn-board/architecture",
              "slug": "/architecture/djinn-board/architecture/agent",
              "permalink": "/docs/architecture/djinn-board/architecture/agent",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-board/architecture/agent.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 8,
              "frontMatter": {
                "id": "agent",
                "title": "Agent",
                "sidebar_position": 8
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Web Client",
                "permalink": "/docs/architecture/djinn-board/architecture/web-client"
              },
              "next": {
                "title": "Security Model",
                "permalink": "/docs/architecture/djinn-board/security-model"
              }
            },
            {
              "unversionedId": "architecture/djinn-board/architecture/authentication-server",
              "id": "architecture/djinn-board/architecture/authentication-server",
              "title": "Authentication Server",
              "description": "This is a OAuth 2.0 server, build in go, that handles the authentication of the users that wan't to control the board.",
              "source": "@site/docs/architecture/djinn-board/architecture/authentication-server.md",
              "sourceDirName": "architecture/djinn-board/architecture",
              "slug": "/architecture/djinn-board/architecture/authentication-server",
              "permalink": "/docs/architecture/djinn-board/architecture/authentication-server",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-board/architecture/authentication-server.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 6,
              "frontMatter": {
                "id": "authentication-server",
                "title": "Authentication Server",
                "sidebar_position": 6
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Gateway",
                "permalink": "/docs/architecture/djinn-board/architecture/gateway"
              },
              "next": {
                "title": "Web Client",
                "permalink": "/docs/architecture/djinn-board/architecture/web-client"
              }
            },
            {
              "unversionedId": "architecture/djinn-board/architecture/event-bus",
              "id": "architecture/djinn-board/architecture/event-bus",
              "title": "Event Bus",
              "description": "In the application all the comunication is going to be asynchrounous and is going to use an message queue to handle the request, the reason we are doing this is because is easy to scale the application using the asynchrounous nature of a publish-subscribe system.",
              "source": "@site/docs/architecture/djinn-board/architecture/event-bus.md",
              "sourceDirName": "architecture/djinn-board/architecture",
              "slug": "/architecture/djinn-board/architecture/event-bus",
              "permalink": "/docs/architecture/djinn-board/architecture/event-bus",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-board/architecture/event-bus.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "id": "event-bus",
                "title": "Event Bus",
                "sidebar_position": 4
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Persistance Layer",
                "permalink": "/docs/architecture/djinn-board/architecture/persistance-layer"
              },
              "next": {
                "title": "Gateway",
                "permalink": "/docs/architecture/djinn-board/architecture/gateway"
              }
            },
            {
              "unversionedId": "architecture/djinn-board/architecture/gateway",
              "id": "architecture/djinn-board/architecture/gateway",
              "title": "Gateway",
              "description": "This is a service that is going to offer a graphql API to interact with the application from the outside world, is going to run in the port 5555 and applications can be built on top of the graphql.",
              "source": "@site/docs/architecture/djinn-board/architecture/gateway.md",
              "sourceDirName": "architecture/djinn-board/architecture",
              "slug": "/architecture/djinn-board/architecture/gateway",
              "permalink": "/docs/architecture/djinn-board/architecture/gateway",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-board/architecture/gateway.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "id": "gateway",
                "title": "Gateway",
                "sidebar_position": 5
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Event Bus",
                "permalink": "/docs/architecture/djinn-board/architecture/event-bus"
              },
              "next": {
                "title": "Authentication Server",
                "permalink": "/docs/architecture/djinn-board/architecture/authentication-server"
              }
            },
            {
              "unversionedId": "architecture/djinn-board/architecture/persistance-layer",
              "id": "architecture/djinn-board/architecture/persistance-layer",
              "title": "Persistance Layer",
              "description": "This is the layer that is used to keep a persistant state of the system, is accesed by the Authentication Service, the Gateway and the platform.",
              "source": "@site/docs/architecture/djinn-board/architecture/persistance-layer.md",
              "sourceDirName": "architecture/djinn-board/architecture",
              "slug": "/architecture/djinn-board/architecture/persistance-layer",
              "permalink": "/docs/architecture/djinn-board/architecture/persistance-layer",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-board/architecture/persistance-layer.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "id": "persistance-layer",
                "title": "Persistance Layer",
                "sidebar_position": 3
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Platform",
                "permalink": "/docs/architecture/djinn-board/architecture/platform"
              },
              "next": {
                "title": "Event Bus",
                "permalink": "/docs/architecture/djinn-board/architecture/event-bus"
              }
            },
            {
              "unversionedId": "architecture/djinn-board/architecture/platform",
              "id": "architecture/djinn-board/architecture/platform",
              "title": "Platform",
              "description": "This part of the architecture is going to handle the communication between the",
              "source": "@site/docs/architecture/djinn-board/architecture/platform.md",
              "sourceDirName": "architecture/djinn-board/architecture",
              "slug": "/architecture/djinn-board/architecture/platform",
              "permalink": "/docs/architecture/djinn-board/architecture/platform",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-board/architecture/platform.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "id": "platform",
                "title": "Platform",
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Installation",
                "permalink": "/docs/architecture/djinn-board/installation"
              },
              "next": {
                "title": "Persistance Layer",
                "permalink": "/docs/architecture/djinn-board/architecture/persistance-layer"
              }
            },
            {
              "unversionedId": "architecture/djinn-board/architecture/web-client",
              "id": "architecture/djinn-board/architecture/web-client",
              "title": "Web Client",
              "description": "This is a web interface that is build in react and runs on top of the Djinn Gateway, it runs on port 80 and enables the users to configure and control the Djinn OS from a browser.",
              "source": "@site/docs/architecture/djinn-board/architecture/web-client.md",
              "sourceDirName": "architecture/djinn-board/architecture",
              "slug": "/architecture/djinn-board/architecture/web-client",
              "permalink": "/docs/architecture/djinn-board/architecture/web-client",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-board/architecture/web-client.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 7,
              "frontMatter": {
                "id": "web-client",
                "title": "Web Client",
                "sidebar_position": 7
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Authentication Server",
                "permalink": "/docs/architecture/djinn-board/architecture/authentication-server"
              },
              "next": {
                "title": "Agent",
                "permalink": "/docs/architecture/djinn-board/architecture/agent"
              }
            },
            {
              "unversionedId": "architecture/djinn-board/installation",
              "id": "architecture/djinn-board/installation",
              "title": "Installation",
              "description": "We already describe that the board is a raspberry pi 4 board which come with an integrated Wi-fi module, that we are going to use to create an access point to which a device is going to connect and then set the credentials required to connect to the user network and other installation requirements.",
              "source": "@site/docs/architecture/djinn-board/installation.md",
              "sourceDirName": "architecture/djinn-board",
              "slug": "/architecture/djinn-board/installation",
              "permalink": "/docs/architecture/djinn-board/installation",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-board/installation.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Overview",
                "permalink": "/docs/architecture/djinn-board/overview"
              },
              "next": {
                "title": "Platform",
                "permalink": "/docs/architecture/djinn-board/architecture/platform"
              }
            },
            {
              "unversionedId": "architecture/djinn-board/overview",
              "id": "architecture/djinn-board/overview",
              "title": "Overview",
              "description": "This is the architecture for the application that is going to run inside the board,",
              "source": "@site/docs/architecture/djinn-board/overview.md",
              "sourceDirName": "architecture/djinn-board",
              "slug": "/architecture/djinn-board/overview",
              "permalink": "/docs/architecture/djinn-board/overview",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-board/overview.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Overview",
                "permalink": "/docs/architecture/overview"
              },
              "next": {
                "title": "Installation",
                "permalink": "/docs/architecture/djinn-board/installation"
              }
            },
            {
              "unversionedId": "architecture/djinn-board/security-model",
              "id": "architecture/djinn-board/security-model",
              "title": "Security Model",
              "description": "TODO Security model",
              "source": "@site/docs/architecture/djinn-board/security-model.md",
              "sourceDirName": "architecture/djinn-board",
              "slug": "/architecture/djinn-board/security-model",
              "permalink": "/docs/architecture/djinn-board/security-model",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-board/security-model.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "id": "security-model",
                "title": "Security Model",
                "sidebar_position": 4
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Agent",
                "permalink": "/docs/architecture/djinn-board/architecture/agent"
              },
              "next": {
                "title": "Overview",
                "permalink": "/docs/architecture/djinn-cloud/overview"
              }
            },
            {
              "unversionedId": "architecture/djinn-client/gateway",
              "id": "architecture/djinn-client/gateway",
              "title": "Gateway",
              "description": "The gateway clients are native applications (Android, iOS, macOS, Windows,",
              "source": "@site/docs/architecture/djinn-client/gateway.md",
              "sourceDirName": "architecture/djinn-client",
              "slug": "/architecture/djinn-client/gateway",
              "permalink": "/docs/architecture/djinn-client/gateway",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-client/gateway.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "id": "gateway",
                "title": "Gateway",
                "sidebar_position": 3
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Web",
                "permalink": "/docs/architecture/djinn-client/web"
              },
              "next": {
                "title": "Use Case",
                "permalink": "/docs/use-case"
              }
            },
            {
              "unversionedId": "architecture/djinn-client/overview",
              "id": "architecture/djinn-client/overview",
              "title": "Overview",
              "description": "This is an application that is going to talk directly with the Djinn Gateway",
              "source": "@site/docs/architecture/djinn-client/overview.md",
              "sourceDirName": "architecture/djinn-client",
              "slug": "/architecture/djinn-client/overview",
              "permalink": "/docs/architecture/djinn-client/overview",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-client/overview.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "id": "overview",
                "title": "Overview",
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Enterprise Edition",
                "permalink": "/docs/architecture/djinn-cloud/enterprise-edition"
              },
              "next": {
                "title": "Web",
                "permalink": "/docs/architecture/djinn-client/web"
              }
            },
            {
              "unversionedId": "architecture/djinn-client/web",
              "id": "architecture/djinn-client/web",
              "title": "Web",
              "description": "This is an application that is embbed in the environment that is running, this",
              "source": "@site/docs/architecture/djinn-client/web.md",
              "sourceDirName": "architecture/djinn-client",
              "slug": "/architecture/djinn-client/web",
              "permalink": "/docs/architecture/djinn-client/web",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-client/web.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "id": "web",
                "title": "Web",
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Overview",
                "permalink": "/docs/architecture/djinn-client/overview"
              },
              "next": {
                "title": "Gateway",
                "permalink": "/docs/architecture/djinn-client/gateway"
              }
            },
            {
              "unversionedId": "architecture/djinn-cloud/community-edition",
              "id": "architecture/djinn-cloud/community-edition",
              "title": "Community Edition",
              "description": "This is totally open source and is target for a single tenancy installation, is going to be distributed by a docker image and use sqlite as a database.",
              "source": "@site/docs/architecture/djinn-cloud/community-edition.md",
              "sourceDirName": "architecture/djinn-cloud",
              "slug": "/architecture/djinn-cloud/community-edition",
              "permalink": "/docs/architecture/djinn-cloud/community-edition",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-cloud/community-edition.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "id": "community-edition",
                "title": "Community Edition",
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Overview",
                "permalink": "/docs/architecture/djinn-cloud/overview"
              },
              "next": {
                "title": "Enterprise Edition",
                "permalink": "/docs/architecture/djinn-cloud/enterprise-edition"
              }
            },
            {
              "unversionedId": "architecture/djinn-cloud/enterprise-edition",
              "id": "architecture/djinn-cloud/enterprise-edition",
              "title": "Enterprise Edition",
              "description": "The enterprise edition is the managed service of the Djinn Cloud, it's build on top on Kubernetes and it supports multinancy.",
              "source": "@site/docs/architecture/djinn-cloud/enterprise-edition.md",
              "sourceDirName": "architecture/djinn-cloud",
              "slug": "/architecture/djinn-cloud/enterprise-edition",
              "permalink": "/docs/architecture/djinn-cloud/enterprise-edition",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-cloud/enterprise-edition.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "id": "enterprise-edition",
                "title": "Enterprise Edition",
                "sidebar_position": 3
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Community Edition",
                "permalink": "/docs/architecture/djinn-cloud/community-edition"
              },
              "next": {
                "title": "Overview",
                "permalink": "/docs/architecture/djinn-client/overview"
              }
            },
            {
              "unversionedId": "architecture/djinn-cloud/overview",
              "id": "architecture/djinn-cloud/overview",
              "title": "Overview",
              "description": "Djinn is going to use the Open-core business model, which is the same that is used by:",
              "source": "@site/docs/architecture/djinn-cloud/overview.md",
              "sourceDirName": "architecture/djinn-cloud",
              "slug": "/architecture/djinn-cloud/overview",
              "permalink": "/docs/architecture/djinn-cloud/overview",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/djinn-cloud/overview.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "id": "overview",
                "title": "Overview",
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Security Model",
                "permalink": "/docs/architecture/djinn-board/security-model"
              },
              "next": {
                "title": "Community Edition",
                "permalink": "/docs/architecture/djinn-cloud/community-edition"
              }
            },
            {
              "unversionedId": "architecture/overview",
              "id": "architecture/overview",
              "title": "Overview",
              "description": "Djinn Architecture",
              "source": "@site/docs/architecture/overview.md",
              "sourceDirName": "architecture",
              "slug": "/architecture/overview",
              "permalink": "/docs/architecture/overview",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/overview.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "id": "overview",
                "title": "Overview",
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "C4",
                "permalink": "/docs/c4"
              },
              "next": {
                "title": "Overview",
                "permalink": "/docs/architecture/djinn-board/overview"
              }
            },
            {
              "unversionedId": "c4",
              "id": "c4",
              "title": "C4",
              "description": "Djinn Board Architecture",
              "source": "@site/docs/c4.md",
              "sourceDirName": ".",
              "slug": "/c4",
              "permalink": "/docs/c4",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/c4.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Introduction",
                "permalink": "/docs/intro"
              },
              "next": {
                "title": "Overview",
                "permalink": "/docs/architecture/overview"
              }
            },
            {
              "unversionedId": "intro",
              "id": "intro",
              "title": "Introduction",
              "description": "Djinn is a framework model that enables customers to add IoT to the framework platform, while also providing an access model and distributed access.",
              "source": "@site/docs/intro.md",
              "sourceDirName": ".",
              "slug": "/intro",
              "permalink": "/docs/intro",
              "editUrl": null,
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "next": {
                "title": "C4",
                "permalink": "/docs/c4"
              }
            },
            {
              "unversionedId": "reference-frameworks",
              "id": "reference-frameworks",
              "title": "Reference Frameworks",
              "description": "The architecture for Djinn 🧞‍♂️, is built using other frameworks as a reference, all of these frameworks provide a framework for the entire infrastructure but their implementation is not feasible unless a tight integration is done, and right now there is a plethora of devices, each using different protocols which are fragmented the market making it more difficult to provide a solution for each device, for this reason, the application chooses the most popular communication protocols and take inspiration on how different frameworks handle different problems.",
              "source": "@site/docs/reference-frameworks.md",
              "sourceDirName": ".",
              "slug": "/reference-frameworks",
              "permalink": "/docs/reference-frameworks",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference-frameworks.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "id": "reference-frameworks",
                "title": "Reference Frameworks",
                "sidebar_position": 5
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Use Case",
                "permalink": "/docs/use-case"
              }
            },
            {
              "unversionedId": "use-case",
              "id": "use-case",
              "title": "Use Case",
              "description": "This board is not target as a replacement of a home assistant like Google Assistant, Siri or Alexa, instead is taking a broader approach to be able to connect any type of devices and being able to control them from a centralized device, in network engineering this is called a Wireless Sensor Network (WSN).",
              "source": "@site/docs/use-cases.md",
              "sourceDirName": ".",
              "slug": "/use-case",
              "permalink": "/docs/use-case",
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/use-cases.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "id": "use-case",
                "title": "Use Case",
                "sidebar_position": 4
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Gateway",
                "permalink": "/docs/architecture/djinn-client/gateway"
              },
              "next": {
                "title": "Reference Frameworks",
                "permalink": "/docs/reference-frameworks"
              }
            }
          ],
          "sidebars": {
            "tutorialSidebar": [
              {
                "type": "doc",
                "id": "intro"
              },
              {
                "type": "doc",
                "id": "c4"
              },
              {
                "type": "category",
                "label": "Architecture",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "architecture/overview"
                  },
                  {
                    "type": "category",
                    "label": "Djinn Board",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "architecture/djinn-board/overview"
                      },
                      {
                        "type": "doc",
                        "id": "architecture/djinn-board/installation"
                      },
                      {
                        "type": "category",
                        "label": "Architecture",
                        "collapsible": true,
                        "collapsed": true,
                        "items": [
                          {
                            "type": "doc",
                            "id": "architecture/djinn-board/architecture/platform"
                          },
                          {
                            "type": "doc",
                            "id": "architecture/djinn-board/architecture/persistance-layer"
                          },
                          {
                            "type": "doc",
                            "id": "architecture/djinn-board/architecture/event-bus"
                          },
                          {
                            "type": "doc",
                            "id": "architecture/djinn-board/architecture/gateway"
                          },
                          {
                            "type": "doc",
                            "id": "architecture/djinn-board/architecture/authentication-server"
                          },
                          {
                            "type": "doc",
                            "id": "architecture/djinn-board/architecture/web-client"
                          },
                          {
                            "type": "doc",
                            "id": "architecture/djinn-board/architecture/agent"
                          }
                        ]
                      },
                      {
                        "type": "doc",
                        "id": "architecture/djinn-board/security-model"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "Djinn Cloud",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "architecture/djinn-cloud/overview"
                      },
                      {
                        "type": "doc",
                        "id": "architecture/djinn-cloud/community-edition"
                      },
                      {
                        "type": "doc",
                        "id": "architecture/djinn-cloud/enterprise-edition"
                      }
                    ]
                  },
                  {
                    "type": "category",
                    "label": "Djinn Client",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "architecture/djinn-client/overview"
                      },
                      {
                        "type": "doc",
                        "id": "architecture/djinn-client/web"
                      },
                      {
                        "type": "doc",
                        "id": "architecture/djinn-client/gateway"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "doc",
                "id": "use-case"
              },
              {
                "type": "doc",
                "id": "reference-frameworks"
              }
            ]
          },
          "mainDocId": "intro",
          "categoryGeneratedIndices": []
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Recent posts",
      "blogPosts": [
        {
          "id": "welcome",
          "metadata": {
            "permalink": "/blog/welcome",
            "source": "@site/blog/2021-08-26-welcome/index.md",
            "title": "Welcome",
            "description": "Docusaurus blogging features are powered by the blog plugin.",
            "date": "2021-08-26T00:00:00.000Z",
            "formattedDate": "August 26, 2021",
            "tags": [
              {
                "label": "facebook",
                "permalink": "/blog/tags/facebook"
              },
              {
                "label": "hello",
                "permalink": "/blog/tags/hello"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.405,
            "truncated": false,
            "authors": [
              {
                "name": "Sébastien Lorber",
                "title": "Docusaurus maintainer",
                "url": "https://sebastienlorber.com",
                "imageURL": "https://github.com/slorber.png",
                "key": "slorber"
              },
              {
                "name": "Yangshun Tay",
                "title": "Front End Engineer @ Facebook",
                "url": "https://github.com/yangshun",
                "imageURL": "https://github.com/yangshun.png",
                "key": "yangshun"
              }
            ],
            "frontMatter": {
              "slug": "welcome",
              "title": "Welcome",
              "authors": [
                "slorber",
                "yangshun"
              ],
              "tags": [
                "facebook",
                "hello",
                "docusaurus"
              ]
            },
            "nextItem": {
              "title": "MDX Blog Post",
              "permalink": "/blog/mdx-blog-post"
            }
          },
          "content": "[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\n\nSimply add Markdown files (or folders) to the `blog` directory.\n\nRegular blog authors can be added to `authors.yml`.\n\nThe blog post date can be extracted from filenames, such as:\n\n- `2019-05-30-welcome.md`\n- `2019-05-30-welcome/index.md`\n\nA blog post folder can be convenient to co-locate blog post images:\n\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\n\nThe blog supports tags as well!\n\n**And if you don't want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."
        },
        {
          "id": "mdx-blog-post",
          "metadata": {
            "permalink": "/blog/mdx-blog-post",
            "source": "@site/blog/2021-08-01-mdx-blog-post.mdx",
            "title": "MDX Blog Post",
            "description": "Blog posts support Docusaurus Markdown features, such as MDX.",
            "date": "2021-08-01T00:00:00.000Z",
            "formattedDate": "August 1, 2021",
            "tags": [
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.175,
            "truncated": false,
            "authors": [
              {
                "name": "Sébastien Lorber",
                "title": "Docusaurus maintainer",
                "url": "https://sebastienlorber.com",
                "imageURL": "https://github.com/slorber.png",
                "key": "slorber"
              }
            ],
            "frontMatter": {
              "slug": "mdx-blog-post",
              "title": "MDX Blog Post",
              "authors": [
                "slorber"
              ],
              "tags": [
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "Welcome",
              "permalink": "/blog/welcome"
            },
            "nextItem": {
              "title": "Long Blog Post",
              "permalink": "/blog/long-blog-post"
            }
          },
          "content": "Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\n\n:::tip\n\nUse the power of React to create interactive blog posts.\n\n```js\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n```\n\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n\n:::"
        },
        {
          "id": "long-blog-post",
          "metadata": {
            "permalink": "/blog/long-blog-post",
            "source": "@site/blog/2019-05-29-long-blog-post.md",
            "title": "Long Blog Post",
            "description": "This is the summary of a very long blog post,",
            "date": "2019-05-29T00:00:00.000Z",
            "formattedDate": "May 29, 2019",
            "tags": [
              {
                "label": "hello",
                "permalink": "/blog/tags/hello"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 2.05,
            "truncated": true,
            "authors": [
              {
                "name": "Endilie Yacop Sucipto",
                "title": "Maintainer of Docusaurus",
                "url": "https://github.com/endiliey",
                "imageURL": "https://github.com/endiliey.png",
                "key": "endi"
              }
            ],
            "frontMatter": {
              "slug": "long-blog-post",
              "title": "Long Blog Post",
              "authors": "endi",
              "tags": [
                "hello",
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "MDX Blog Post",
              "permalink": "/blog/mdx-blog-post"
            },
            "nextItem": {
              "title": "First Blog Post",
              "permalink": "/blog/first-blog-post"
            }
          },
          "content": "This is the summary of a very long blog post,\n\nUse a `<!--` `truncate` `-->` comment to limit blog post size in the list view.\n\n<!--truncate-->\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
        },
        {
          "id": "first-blog-post",
          "metadata": {
            "permalink": "/blog/first-blog-post",
            "source": "@site/blog/2019-05-28-first-blog-post.md",
            "title": "First Blog Post",
            "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet",
            "date": "2019-05-28T00:00:00.000Z",
            "formattedDate": "May 28, 2019",
            "tags": [
              {
                "label": "hola",
                "permalink": "/blog/tags/hola"
              },
              {
                "label": "docusaurus",
                "permalink": "/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.12,
            "truncated": false,
            "authors": [
              {
                "name": "Gao Wei",
                "title": "Docusaurus Core Team",
                "url": "https://github.com/wgao19",
                "image_url": "https://github.com/wgao19.png",
                "imageURL": "https://github.com/wgao19.png"
              }
            ],
            "frontMatter": {
              "slug": "first-blog-post",
              "title": "First Blog Post",
              "authors": {
                "name": "Gao Wei",
                "title": "Docusaurus Core Team",
                "url": "https://github.com/wgao19",
                "image_url": "https://github.com/wgao19.png",
                "imageURL": "https://github.com/wgao19.png"
              },
              "tags": [
                "hola",
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "Long Blog Post",
              "permalink": "/blog/long-blog-post"
            }
          },
          "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
        }
      ],
      "blogListPaginated": [
        {
          "items": [
            "welcome",
            "mdx-blog-post",
            "long-blog-post",
            "first-blog-post"
          ],
          "metadata": {
            "permalink": "/blog",
            "page": 1,
            "postsPerPage": 10,
            "totalPages": 1,
            "totalCount": 4,
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          }
        }
      ],
      "blogTags": {
        "/blog/tags/facebook": {
          "name": "facebook",
          "items": [
            "welcome"
          ],
          "permalink": "/blog/tags/facebook",
          "pages": [
            {
              "items": [
                "welcome"
              ],
              "metadata": {
                "permalink": "/blog/tags/facebook",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/hello": {
          "name": "hello",
          "items": [
            "welcome",
            "long-blog-post"
          ],
          "permalink": "/blog/tags/hello",
          "pages": [
            {
              "items": [
                "welcome",
                "long-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/hello",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 2,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/docusaurus": {
          "name": "docusaurus",
          "items": [
            "welcome",
            "mdx-blog-post",
            "long-blog-post",
            "first-blog-post"
          ],
          "permalink": "/blog/tags/docusaurus",
          "pages": [
            {
              "items": [
                "welcome",
                "mdx-blog-post",
                "long-blog-post",
                "first-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/docusaurus",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 4,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/blog/tags/hola": {
          "name": "hola",
          "items": [
            "first-blog-post"
          ],
          "permalink": "/blog/tags/hola",
          "pages": [
            {
              "items": [
                "first-blog-post"
              ],
              "metadata": {
                "permalink": "/blog/tags/hola",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        }
      },
      "blogTagsListPath": "/blog/tags"
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": [
      {
        "type": "jsx",
        "permalink": "/",
        "source": "@site/src/pages/index.js"
      },
      {
        "type": "mdx",
        "permalink": "/markdown-page",
        "source": "@site/src/pages/markdown-page.md",
        "title": "Markdown page example",
        "description": "You don't need React to write simple standalone pages.",
        "frontMatter": {
          "title": "Markdown page example"
        }
      }
    ]
  },
  "docusaurus-plugin-debug": {},
  "docusaurus-theme-classic": {},
  "docusaurus-plugin-image-zoom": {},
  "docusaurus-plugin-pwa": {}
}