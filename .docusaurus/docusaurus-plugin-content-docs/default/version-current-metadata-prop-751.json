{
  "pluginId": "default",
  "version": "current",
  "label": "Next",
  "banner": null,
  "badge": false,
  "className": "docs-version-current",
  "isLast": true,
  "docsSidebars": {
    "tutorialSidebar": [
      {
        "type": "link",
        "label": "Introduction",
        "href": "/docs/intro",
        "docId": "intro"
      },
      {
        "type": "link",
        "label": "C4",
        "href": "/docs/c4",
        "docId": "c4"
      },
      {
        "type": "category",
        "label": "Architecture",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "Overview",
            "href": "/docs/architecture/overview",
            "docId": "architecture/overview"
          },
          {
            "type": "category",
            "label": "Djinn Board",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Overview",
                "href": "/docs/architecture/djinn-board/overview",
                "docId": "architecture/djinn-board/overview"
              },
              {
                "type": "link",
                "label": "Installation",
                "href": "/docs/architecture/djinn-board/installation",
                "docId": "architecture/djinn-board/installation"
              },
              {
                "type": "category",
                "label": "Architecture",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "link",
                    "label": "Platform",
                    "href": "/docs/architecture/djinn-board/architecture/platform",
                    "docId": "architecture/djinn-board/architecture/platform"
                  },
                  {
                    "type": "link",
                    "label": "Persistance Layer",
                    "href": "/docs/architecture/djinn-board/architecture/persistance-layer",
                    "docId": "architecture/djinn-board/architecture/persistance-layer"
                  },
                  {
                    "type": "link",
                    "label": "Event Bus",
                    "href": "/docs/architecture/djinn-board/architecture/event-bus",
                    "docId": "architecture/djinn-board/architecture/event-bus"
                  },
                  {
                    "type": "link",
                    "label": "Gateway",
                    "href": "/docs/architecture/djinn-board/architecture/gateway",
                    "docId": "architecture/djinn-board/architecture/gateway"
                  },
                  {
                    "type": "link",
                    "label": "Authentication Server",
                    "href": "/docs/architecture/djinn-board/architecture/authentication-server",
                    "docId": "architecture/djinn-board/architecture/authentication-server"
                  },
                  {
                    "type": "link",
                    "label": "Web Client",
                    "href": "/docs/architecture/djinn-board/architecture/web-client",
                    "docId": "architecture/djinn-board/architecture/web-client"
                  },
                  {
                    "type": "link",
                    "label": "Agent",
                    "href": "/docs/architecture/djinn-board/architecture/agent",
                    "docId": "architecture/djinn-board/architecture/agent"
                  }
                ]
              },
              {
                "type": "link",
                "label": "Security Model",
                "href": "/docs/architecture/djinn-board/security-model",
                "docId": "architecture/djinn-board/security-model"
              }
            ]
          },
          {
            "type": "category",
            "label": "Djinn Cloud",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Overview",
                "href": "/docs/architecture/djinn-cloud/overview",
                "docId": "architecture/djinn-cloud/overview"
              },
              {
                "type": "link",
                "label": "Community Edition",
                "href": "/docs/architecture/djinn-cloud/community-edition",
                "docId": "architecture/djinn-cloud/community-edition"
              },
              {
                "type": "link",
                "label": "Enterprise Edition",
                "href": "/docs/architecture/djinn-cloud/enterprise-edition",
                "docId": "architecture/djinn-cloud/enterprise-edition"
              },
              {
                "type": "link",
                "label": "Security Model",
                "href": "/docs/architecture/djinn-cloud/security-model",
                "docId": "architecture/djinn-cloud/security-model"
              }
            ]
          },
          {
            "type": "category",
            "label": "Djinn Client",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Overview",
                "href": "/docs/architecture/djinn-client/overview",
                "docId": "architecture/djinn-client/overview"
              },
              {
                "type": "link",
                "label": "Web",
                "href": "/docs/architecture/djinn-client/web",
                "docId": "architecture/djinn-client/web"
              },
              {
                "type": "link",
                "label": "Gateway",
                "href": "/docs/architecture/djinn-client/gateway",
                "docId": "architecture/djinn-client/gateway"
              }
            ]
          }
        ]
      },
      {
        "type": "link",
        "label": "Use Case",
        "href": "/docs/use-case",
        "docId": "use-case"
      },
      {
        "type": "link",
        "label": "Reference Frameworks",
        "href": "/docs/reference-frameworks",
        "docId": "reference-frameworks"
      }
    ]
  },
  "docs": {
    "architecture/djinn-board/architecture/agent": {
      "id": "architecture/djinn-board/architecture/agent",
      "title": "Agent",
      "description": "Agent Diagram",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-board/architecture/authentication-server": {
      "id": "architecture/djinn-board/architecture/authentication-server",
      "title": "Authentication Server",
      "description": "This is a OAuth 2.0 server, build in go, that handles the authentication of the users that wan't to control the board.",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-board/architecture/event-bus": {
      "id": "architecture/djinn-board/architecture/event-bus",
      "title": "Event Bus",
      "description": "In the application all the comunication is going to be asynchrounous and is going to use an message queue to handle the request, the reason we are doing this is because is easy to scale the application using the asynchrounous nature of a publish-subscribe system.",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-board/architecture/gateway": {
      "id": "architecture/djinn-board/architecture/gateway",
      "title": "Gateway",
      "description": "This is a service that is going to offer a graphql API to interact with the application from the outside world, is going to run in the port 5555 and applications can be built on top of the graphql.",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-board/architecture/persistance-layer": {
      "id": "architecture/djinn-board/architecture/persistance-layer",
      "title": "Persistance Layer",
      "description": "This is the layer that is used to keep a persistant state of the system, is accesed by the Authentication Service, the Gateway and the platform.",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-board/architecture/platform": {
      "id": "architecture/djinn-board/architecture/platform",
      "title": "Platform",
      "description": "This part of the architecture is going to handle the communication between the",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-board/architecture/web-client": {
      "id": "architecture/djinn-board/architecture/web-client",
      "title": "Web Client",
      "description": "This is a web interface that is build in react and runs on top of the Djinn Gateway, it runs on port 80 and port 443 and enables the users to configure and control the Djinn OS from a browser.",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-board/installation": {
      "id": "architecture/djinn-board/installation",
      "title": "Installation",
      "description": "We already describe that the board is a raspberry pi 4 board which come with an integrated Wi-fi module, that we are going to use to create an access point to which a device is going to connect and then set the credentials required to connect to the user network and other installation requirements.",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-board/overview": {
      "id": "architecture/djinn-board/overview",
      "title": "Overview",
      "description": "This is the architecture for the application that is going to run inside the board,",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-board/security-model": {
      "id": "architecture/djinn-board/security-model",
      "title": "Security Model",
      "description": "The board is going to be exposed to the user network and because of this the board comes with a security model built-in, since security is one of the principles for Djinn we protect the data with Authorization and Access control, but the board provides security measures built-in like Secret Managmenement and data encryption (On Storage and on Transit).",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-client/gateway": {
      "id": "architecture/djinn-client/gateway",
      "title": "Gateway",
      "description": "The gateway clients are native applications (Android, iOS, macOS, Windows,",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-client/overview": {
      "id": "architecture/djinn-client/overview",
      "title": "Overview",
      "description": "This is an application that is going to talk directly with the Djinn Gateway",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-client/web": {
      "id": "architecture/djinn-client/web",
      "title": "Web",
      "description": "This is an application that is embbed in the environment that is running, this",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-cloud/community-edition": {
      "id": "architecture/djinn-cloud/community-edition",
      "title": "Community Edition",
      "description": "This edition is open source and self hosted, the user are able to install the application in any server that they want.",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-cloud/enterprise-edition": {
      "id": "architecture/djinn-cloud/enterprise-edition",
      "title": "Enterprise Edition",
      "description": "This is the SaaS offering, propertary, where users are able to sign up and create their own cloud of homes, this is build on top of a full fledge kubernetes cluster that supports multinancy by creating a new Namespace for each customer.",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-cloud/overview": {
      "id": "architecture/djinn-cloud/overview",
      "title": "Overview",
      "description": "Djinn is going to use the Open-core business model, which is the same that is used by:",
      "sidebar": "tutorialSidebar"
    },
    "architecture/djinn-cloud/security-model": {
      "id": "architecture/djinn-cloud/security-model",
      "title": "Security Model",
      "description": "The cloud, as it's name state, is going to be publically available, and is more prone to attacks than the board that lives in a private network.",
      "sidebar": "tutorialSidebar"
    },
    "architecture/overview": {
      "id": "architecture/overview",
      "title": "Overview",
      "description": "Djinn Architecture",
      "sidebar": "tutorialSidebar"
    },
    "c4": {
      "id": "c4",
      "title": "C4",
      "description": "Djinn Board Architecture",
      "sidebar": "tutorialSidebar"
    },
    "intro": {
      "id": "intro",
      "title": "Introduction",
      "description": "Djinn is a framework model that enables customers to add IoT to the framework platform, while also providing an access model and distributed access.",
      "sidebar": "tutorialSidebar"
    },
    "reference-frameworks": {
      "id": "reference-frameworks",
      "title": "Reference Frameworks",
      "description": "The architecture for Djinn 🧞‍♂️, is built using other frameworks as a reference, all of these frameworks provide a framework for the entire infrastructure but their implementation is not feasible unless a tight integration is done, and right now there is a plethora of devices, each using different protocols which are fragmented the market making it more difficult to provide a solution for each device, for this reason, the application chooses the most popular communication protocols and take inspiration on how different frameworks handle different problems.",
      "sidebar": "tutorialSidebar"
    },
    "use-case": {
      "id": "use-case",
      "title": "Use Case",
      "description": "This board is not target as a replacement of a home assistant like Google Assistant, Siri or Alexa, instead is taking a broader approach to be able to connect any type of devices and being able to control them from a centralized device, in network engineering this is called a Wireless Sensor Network (WSN).",
      "sidebar": "tutorialSidebar"
    }
  }
}